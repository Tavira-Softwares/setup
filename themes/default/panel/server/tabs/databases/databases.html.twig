{% block main %}
    <div class="tab-pane" id="databases">
        <div class="row pt-3">
            <div class="col-12 mb-4">
                {% if serverData.pterodactylServer.relationships.databases.toArray()|length == 0 %}
                    <div class="alert alert-info col-6 offset-3" role="alert">
                        <i class="fas fa-info-circle pe-1"></i>
                        {{ 'pteroca.server.no_databases'|trans }}
                    </div>
                {% else %}
                    <table class="table datagrid text-center">
                        <thead>
                            <tr>
                                <th class="pb-2">{{ 'pteroca.server.name'|trans }}</th>
                                <th class="pb-2">{{ 'pteroca.server.connections_from'|trans }}</th>
                                <th class="pb-2">{{ 'pteroca.server.username'|trans }}</th>
                                <th class="pb-2">{{ 'pteroca.server.action'|trans }}</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for database in serverData.pterodactylServer.relationships.databases.toArray() %}
                                <tr>
                                    <td>{{ database.database }}</td>
                                    <td class="pt-4"><pre>{{ database.remote }}</pre></td>
                                    <td class="pt-4"><pre>{{ database.username }}</pre></td>
                                    <td class="actions actions-as-dropdown text-center">
                                        <div class="dropdown dropdown-actions">
                                            <a class="dropdown-toggle dropdown-toggle-hidden-marker" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="icon">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"></path>
                                                </svg>
                                            </span>
                                            </a>
                                            <div class="dropdown-overlay">
                                                <ul class="dropdown-menu dropdown-menu-end">
                                                    <li>
                                                        <a class="dropdown-item action-edit" href="{{ path('server_database_get_all', { id: server.id }) }}" {% if not is_demo() %}data-action-name="show" data-bs-toggle="modal" data-bs-target="#showDatabaseModal" data-database-name="{{ database.database }}"{% endif %}>
                                                            <span class="action-label">
                                                                <i class="fas fa-eye"></i>
                                                                {{ 'pteroca.server.show'|trans }}
                                                            </span>
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item action-edit" href="#" {% if not is_demo() %}data-action-name="delete" data-bs-toggle="modal" data-bs-target="#deleteDatabaseModal" data-database-name="{{ database.database }}" data-database-id="{{ database.id }}"{% endif %}>
                                                            <span class="action-label">
                                                                <i class="fas fa-trash"></i>
                                                                {{ 'pteroca.server.delete'|trans }}
                                                            </span>
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </div>
            <div class="col-12 mb-3">
                <button type="button" class="btn btn-primary float-end" {% if not is_demo() %}data-bs-toggle="modal" data-bs-target="#createDatabaseModal"{% endif%} {% if server.serverProduct.dbCount <= serverData.pterodactylServer.relationships.databases.toArray()|length %}disabled{% endif %}>
                    <i class="fas fa-plus"></i>
                    {{ 'pteroca.server.create_database'|trans }}
                </button>
            </div>
        </div>
    </div>

    {% if server.serverProduct.dbCount > serverData.pterodactylServer.relationships.databases.toArray()|length %}
        {% include 'panel/server/tabs/databases/components/create_database_modal.html.twig' %}
    {% endif %}

    {% if serverData.pterodactylServer.relationships.databases.toArray()|length > 0 %}
        {% include 'panel/server/tabs/databases/components/delete_database_modal.html.twig' %}
        {% include 'panel/server/tabs/databases/components/show_database_modal.html.twig' %}
    {% endif %}
{% endblock %}

{% block body_javascript %}
    <script>
        let loadedDatabases = [];

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('#databases .dropdown-actions .dropdown-menu .action-edit').forEach(function (element) {
                element.addEventListener('click', function (event) {
                    event.preventDefault()

                    alert('{{ 'pteroca.demo.limited_in_demo'|trans }}')
                    return

                    const anchorElement = event.target.closest('a'),
                        actionName = anchorElement.getAttribute('data-action-name'),
                        endpointUrl = anchorElement.getAttribute('href'),
                        databaseName = anchorElement.getAttribute('data-database-name')

                    if (actionName === 'delete') {
                        document.querySelector('#database-delete-name').textContent = databaseName
                        document.querySelector('#databaseId').value = anchorElement.getAttribute('data-database-id')

                        return
                    }

                    if (loadedDatabases.length === 0) {
                        fetch(endpointUrl)
                            .then(response => response.json())
                            .then(data => {
                                loadedDatabases = data
                                loadCurrentDatabaseInfo(databaseName)
                            })
                    } else {
                        loadCurrentDatabaseInfo(databaseName)
                    }
                })
            })
        })
    </script>
{% endblock %}