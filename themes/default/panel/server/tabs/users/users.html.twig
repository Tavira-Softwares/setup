{% block main %}
    <div class="tab-pane" id="users">
        <div class="row pt-3">
            <div class="col-12 mb-3">
                <h5>{{ 'pteroca.server.users_management'|trans }}</h5>
                
                {% if serverData.subusers|length > 0 %}
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            <th>{{ 'pteroca.server.user_email'|trans }}</th>
                            <th>{{ 'pteroca.server.user_permissions'|trans }}</th>
                            <th>{{ 'pteroca.server.user_created'|trans }}</th>
                            <th>{{ 'pteroca.server.actions'|trans }}</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for subuser in serverData.subusers %}
                            <tr>
                                <td>
                                    <strong>{{ subuser.email }}</strong>
                                    {% if subuser['2fa_enabled'] %}
                                        <span class="badge bg-success ms-2">2FA</span>
                                    {% endif %}
                                </td>
                                <td>
                                    {% if subuser.permissions is defined and subuser.permissions|length > 0 %}
                                        <div class="permissions-list">
                                            {% for permission in subuser.permissions %}
                                                <span class="badge bg-secondary me-1 mb-1 text-white">{{ permission }}</span>
                                            {% endfor %}
                                        </div>
                                    {% else %}
                                        <span class="text-muted">{{ 'pteroca.server.no_permissions'|trans }}</span>
                                    {% endif %}
                                </td>
                                <td>
                                    {% if subuser.created_at is defined %}
                                        {{ subuser.created_at|date('Y-m-d H:i:s') }}
                                    {% else %}
                                        <span class="text-muted">-</span>
                                    {% endif %}
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="editUser('{{ subuser.uuid }}')">
                                            <i class="fas fa-edit"></i> {{ 'pteroca.server.edit'|trans }}
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeUser('{{ subuser.uuid }}')">
                                            <i class="fas fa-trash"></i> {{ 'pteroca.server.remove'|trans }}
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% else %}
                    <div class="alert alert-info col-6 offset-3" role="alert">
                        <i class="fas fa-info-circle pe-1"></i>
                        {{ 'pteroca.server.no_subusers'|trans }}
                    </div>
                {% endif %}
                
                <div class="mt-4">
                    <button type="button" class="btn btn-primary" onclick="addNewUser()">
                        <i class="fas fa-plus"></i> {{ 'pteroca.server.add_user'|trans }}
                    </button>
                </div>
            </div>
        </div>
        
        {% include 'panel/server/tabs/users/components/edit-user-modal.html.twig' %}
    </div>
{% endblock %}

{% block body_javascript %}
    <script>
        let currentSubusers = {{ serverData.subusers|json_encode|raw }};
        
        function addNewUser() {
            // TODO: Implementacja dodawania nowego użytkownika
            alert('{{ 'pteroca.server.feature_coming_soon'|trans }}');
        }
        
        function editUser(userUuid) {
            // Znajdź użytkownika w danych
            const user = currentSubusers.find(u => u.uuid === userUuid);
            if (!user) {
                alert('Nie znaleziono użytkownika');
                return;
            }
            
            // Ustaw email w tytule modala
            document.getElementById('userEmail').textContent = user.email;
            document.getElementById('editUserUuid').value = userUuid;
            
            // Wyczyść wszystkie checkboxy
            document.querySelectorAll('#editUserForm input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            
            // Zaznacz uprawnienia użytkownika
            if (user.permissions && user.permissions.length > 0) {
                user.permissions.forEach(permission => {
                    const checkbox = document.querySelector(`input[value="${permission}"]`);
                    if (checkbox) {
                        checkbox.checked = true;
                    }
                });
            }
            
            // Aktualizuj checkboxy grup
            updateGroupCheckboxes();
            
            // Pokaż modal
            const modal = new bootstrap.Modal(document.getElementById('editUserModal'));
            modal.show();
        }
        
        function removeUser(userUuid) {
            if (confirm('{{ 'pteroca.server.confirm_remove_user'|trans }}')) {
                // TODO: Implementacja usuwania użytkownika
                alert('{{ 'pteroca.server.feature_coming_soon'|trans }} - Remove user: ' + userUuid);
            }
        }
        
        function saveUserPermissions() {
            const userUuid = document.getElementById('editUserUuid').value;
            const form = document.getElementById('editUserForm');
            const formData = new FormData(form);
            const permissions = formData.getAll('permissions[]');
            
            // TODO: Wyślij żądanie do serwera z nowymi uprawnieniami
            console.log('Saving permissions for user:', userUuid, permissions);
            alert('{{ 'pteroca.server.feature_coming_soon'|trans }} - Zapisywanie uprawnień dla: ' + userUuid);
            
            // Zamknij modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('editUserModal'));
            modal.hide();
        }
        
        function updateGroupCheckboxes() {
            // Aktualizuj checkboxy grup na podstawie zaznaczonych uprawnień
            document.querySelectorAll('.group-checkbox').forEach(groupCheckbox => {
                const group = groupCheckbox.dataset.group;
                const groupPermissions = document.querySelectorAll(`input[data-group="${group}"].permission-checkbox`);
                const checkedPermissions = document.querySelectorAll(`input[data-group="${group}"].permission-checkbox:checked`);
                
                if (checkedPermissions.length === 0) {
                    groupCheckbox.checked = false;
                    groupCheckbox.indeterminate = false;
                } else if (checkedPermissions.length === groupPermissions.length) {
                    groupCheckbox.checked = true;
                    groupCheckbox.indeterminate = false;
                } else {
                    groupCheckbox.checked = false;
                    groupCheckbox.indeterminate = true;
                }
            });
        }
        
        // Event listenery dla checkboxów grup
        document.addEventListener('DOMContentLoaded', function() {
            // Obsługa checkboxów grup
            document.querySelectorAll('.group-checkbox').forEach(groupCheckbox => {
                groupCheckbox.addEventListener('change', function() {
                    const group = this.dataset.group;
                    const groupPermissions = document.querySelectorAll(`input[data-group="${group}"].permission-checkbox`);
                    
                    groupPermissions.forEach(permission => {
                        permission.checked = this.checked;
                    });
                });
            });
            
            // Obsługa pojedynczych checkboxów uprawnień
            document.querySelectorAll('.permission-checkbox').forEach(permissionCheckbox => {
                permissionCheckbox.addEventListener('change', function() {
                    updateGroupCheckboxes();
                });
            });
        });
    </script>
{% endblock %}
